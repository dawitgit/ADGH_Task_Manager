{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/autosize/src/autosize.js","webpack:///./src/app_data.js","webpack:///./src/edit_task.js","webpack:///./src/index.js","webpack:///./src/paint_ui.js","webpack:///./src/storage.js","webpack:///./src/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,4CAA4C,cAAc;AAC1D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAgF;;AAEhF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC/PxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;;AAEA,cAAc,OAAO;AACrB;;AAEA,cAAc,YAAY;AAC1B;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA,IAAI,gDAAO;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,gDAAO;AACX;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,IAAI,gDAAO;AACX;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAO;AACX;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA,IAAI,gDAAO;AACX;;AAEA;AACA,aAAa,KAAK;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA,IAAI,gDAAO;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA,cA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I,iDAAO;AACX,IAAI,yEAAuB;AAC3B,IAAI,qEAAmB,CAAC,iDAAO;AAC/B;;AAEA,YAAY,sDAAY;AACxB;;AAEA;AACA,MAAM,iDAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAO,YAAY,sDAAY;AACnC,IAAI,yEAAuB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8CAAI;AACvB,EAAE,iDAAO;AACT;AACA,EAAE,qEAAmB,CAAC,iDAAO;AAC7B;AACA;;AAEA;AACA,gBAAgB,iDAAO;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,MAAM;AAC7D;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA,kDAAkD,MAAM;AACxD;AACA;AACA,0BAA0B,0BAA0B;;AAEpD;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,4BAA4B,6BAA6B;AACzD,GAAG;AACH;;AAEA;AACA,gBAAgB,iDAAO;AACvB,yBAAyB,iDAAO;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA,uDAAuD,MAAM;AAC7D;AACA;AACA,0BAA0B,0BAA0B;;AAEpD;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,4BAA4B,6BAA6B;AACzD,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI,iDAAO,YAAY,sDAAY;AACnC,IAAI,yEAAuB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD,EAAE,iDAAO,0BAA0B,iDAAO;;AAE1C;AACA;AACA;;AAEA;AACA,qBAAqB,iDAAO;AAC5B;AACA,QAAQ,iDAAO;AACf;AACA,mBAAmB,iDAAO;AAC1B,MAAM,iDAAO;AACb,KAAK;AACL;AACA,UAAU,iDAAO;AACjB,mBAAmB,iDAAO;AAC1B,MAAM,iDAAO;AACb;AACA;;AAEA;AACA,qBAAqB,iDAAO;AAC5B;AACA,QAAQ,iDAAO;AACf;AACA,mBAAmB,iDAAO;AAC1B,MAAM,iDAAO;AACb,KAAK;AACL,+BAA+B,iDAAO;AACtC,mBAAmB,iDAAO;AAC1B,MAAM,iDAAO;AACb;AACA;;AAEA;AACA,EAAE,yEAAuB,CAAC,iDAAO;AACjC;AACA;;AAEA,MAAM,iDAAO;AACb,IAAI,qEAAuB;AAC3B,IAAI,sEAAoB;AACxB;AACA,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,iDAAO;AACT,EAAE,iDAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iDAAO;AACX,IAAI,iDAAO;AACX,IAAI,yEAAuB,CAAC,iDAAO;AACnC,IAAI,uFAAqC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA,uCAAuC,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK;AACxE;AACA;AACA;AACA;;AAEA;AACA;;AAQE;;;;;;;;;;;;;ACtaF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AACI;AACV;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAuB;;AAE3B;AACA;AACA,IAAI,qDAAc;;AAElB;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,qEAAuB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA,kEAAkE,MAAM;AACxE,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,qEAAQ;AACV;;AAEA;AACA,WAAW,cAAc;AACzB;AACA;AACA;;AAEA,EAAE,qEAAuB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,IAAI,UAAU;AAC9C;AACA;AACA,iDAAiD,MAAM;AACvD,iCAAiC,WAAW;AAC5C,iCAAiC,WAAW;AAC5C,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,0BAA0B,MAAM;AAChC;AACA;AACA,kDAAkD,MAAM;AACxD;AACA;AACA;AACA;;AAEA;AACA,EAAE,qEAAQ;AACV;;AAEA;AACA;AACA;AACA;AACA,MAAM,iDAAO;AACb;AACA;AACA;AACA,IAAI,iDAAO,YAAY,sDAAY;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,iDAAO;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iDAAO;AACb,IAAI,qEAAuB;AAC3B;AACA;AACA;AACA;;AAEA;AACA,MAAM,iDAAO;AACb,IAAI,qEAAuB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,iDAAO;AACb;AACA,sBAAsB,iDAAO;AAC7B;;AAEA;AACA,MAAM,iDAAO;AACb,0BAA0B,iDAAO;AACjC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0DAA0D,GAAG;AAC7D;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,iDAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,iDAAO;AACf;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAO;AAC/B;;AAEA;AACA;AACA;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,QAAQ,iDAAO,YAAY,sDAAY;AACvC;AACA,2CAA2C,iBAAiB;AAC5D,2CAA2C,iBAAiB;AAC5D;AACA;AACA;;;AAiBE;;;;;;;;;;;;;ACrWF;AAAA;AAAA,WAAW,QAAQ;;AAEnB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEiB;;;;;;;;;;;;;ACvBjB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE6C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const map = (typeof Map === \"function\") ? new Map() : (function () {\n\tconst keys = [];\n\tconst values = [];\n\n\treturn {\n\t\thas(key) {\n\t\t\treturn keys.indexOf(key) > -1;\n\t\t},\n\t\tget(key) {\n\t\t\treturn values[keys.indexOf(key)];\n\t\t},\n\t\tset(key, value) {\n\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\tkeys.push(key);\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t},\n\t\tdelete(key) {\n\t\t\tconst index = keys.indexOf(key);\n\t\t\tif (index > -1) {\n\t\t\t\tkeys.splice(index, 1);\n\t\t\t\tvalues.splice(index, 1);\n\t\t\t}\n\t\t},\n\t}\n})();\n\nlet createEvent = (name)=> new Event(name, {bubbles: true});\ntry {\n\tnew Event('test');\n} catch(e) {\n\t// IE does not support `new Event()`\n\tcreateEvent = (name)=> {\n\t\tconst evt = document.createEvent('Event');\n\t\tevt.initEvent(name, true, false);\n\t\treturn evt;\n\t};\n}\n\nfunction assign(ta) {\n\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\tlet heightOffset = null;\n\tlet clientWidth = null;\n\tlet cachedHeight = null;\n\n\tfunction init() {\n\t\tconst style = window.getComputedStyle(ta, null);\n\n\t\tif (style.resize === 'vertical') {\n\t\t\tta.style.resize = 'none';\n\t\t} else if (style.resize === 'both') {\n\t\t\tta.style.resize = 'horizontal';\n\t\t}\n\n\t\tif (style.boxSizing === 'content-box') {\n\t\t\theightOffset = -(parseFloat(style.paddingTop)+parseFloat(style.paddingBottom));\n\t\t} else {\n\t\t\theightOffset = parseFloat(style.borderTopWidth)+parseFloat(style.borderBottomWidth);\n\t\t}\n\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\tif (isNaN(heightOffset)) {\n\t\t\theightOffset = 0;\n\t\t}\n\n\t\tupdate();\n\t}\n\n\tfunction changeOverflow(value) {\n\t\t{\n\t\t\t// Chrome/Safari-specific fix:\n\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\tconst width = ta.style.width;\n\t\t\tta.style.width = '0px';\n\t\t\t// Force reflow:\n\t\t\t/* jshint ignore:start */\n\t\t\tta.offsetWidth;\n\t\t\t/* jshint ignore:end */\n\t\t\tta.style.width = width;\n\t\t}\n\n\t\tta.style.overflowY = value;\n\t}\n\n\tfunction getParentOverflows(el) {\n\t\tconst arr = [];\n\n\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\tarr.push({\n\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\tscrollTop: el.parentNode.scrollTop,\n\t\t\t\t})\n\t\t\t}\n\t\t\tel = el.parentNode;\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tfunction resize() {\n\t\tif (ta.scrollHeight === 0) {\n\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\treturn;\n\t\t}\n\n\t\tconst overflows = getParentOverflows(ta);\n\t\tconst docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\tta.style.height = '';\n\t\tta.style.height = (ta.scrollHeight+heightOffset)+'px';\n\n\t\t// used to check if an update is actually necessary on window.resize\n\t\tclientWidth = ta.clientWidth;\n\n\t\t// prevents scroll-position jumping\n\t\toverflows.forEach(el => {\n\t\t\tel.node.scrollTop = el.scrollTop\n\t\t});\n\n\t\tif (docTop) {\n\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t}\n\t}\n\n\tfunction update() {\n\t\tresize();\n\n\t\tconst styleHeight = Math.round(parseFloat(ta.style.height));\n\t\tconst computed = window.getComputedStyle(ta, null);\n\n\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\tif (actualHeight < styleHeight) {\n\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\tchangeOverflow('scroll');\n\t\t\t\tresize();\n\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t}\n\t\t} else {\n\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\tchangeOverflow('hidden');\n\t\t\t\tresize();\n\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t}\n\t\t}\n\n\t\tif (cachedHeight !== actualHeight) {\n\t\t\tcachedHeight = actualHeight;\n\t\t\tconst evt = createEvent('autosize:resized');\n\t\t\ttry {\n\t\t\t\tta.dispatchEvent(evt);\n\t\t\t} catch (err) {\n\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t}\n\t\t}\n\t}\n\n\tconst pageResize = () => {\n\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\tupdate();\n\t\t}\n\t};\n\n\tconst destroy = (style => {\n\t\twindow.removeEventListener('resize', pageResize, false);\n\t\tta.removeEventListener('input', update, false);\n\t\tta.removeEventListener('keyup', update, false);\n\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\tObject.keys(style).forEach(key => {\n\t\t\tta.style[key] = style[key];\n\t\t});\n\n\t\tmap.delete(ta);\n\t}).bind(ta, {\n\t\theight: ta.style.height,\n\t\tresize: ta.style.resize,\n\t\toverflowY: ta.style.overflowY,\n\t\toverflowX: ta.style.overflowX,\n\t\twordWrap: ta.style.wordWrap,\n\t});\n\n\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t// so binding to onkeyup to catch most of those events.\n\t// There is no way that I know of to detect something like 'cut' in IE9.\n\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\tta.addEventListener('keyup', update, false);\n\t}\n\n\twindow.addEventListener('resize', pageResize, false);\n\tta.addEventListener('input', update, false);\n\tta.addEventListener('autosize:update', update, false);\n\tta.style.overflowX = 'hidden';\n\tta.style.wordWrap = 'break-word';\n\n\tmap.set(ta, {\n\t\tdestroy,\n\t\tupdate,\n\t});\n\n\tinit();\n}\n\nfunction destroy(ta) {\n\tconst methods = map.get(ta);\n\tif (methods) {\n\t\tmethods.destroy();\n\t}\n}\n\nfunction update(ta) {\n\tconst methods = map.get(ta);\n\tif (methods) {\n\t\tmethods.update();\n\t}\n}\n\nlet autosize = null;\n\n// Do nothing in Node.js environment and IE8 (or lower)\nif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\tautosize = el => el;\n\tautosize.destroy = el => el;\n\tautosize.update = el => el;\n} else {\n\tautosize = (el, options) => {\n\t\tif (el) {\n\t\t\tArray.prototype.forEach.call(el.length ? el : [el], x => assign(x, options));\n\t\t}\n\t\treturn el;\n\t};\n\tautosize.destroy = el => {\n\t\tif (el) {\n\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t}\n\t\treturn el;\n\t};\n\tautosize.update = el => {\n\t\tif (el) {\n\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t}\n\t\treturn el;\n\t};\n}\n\nexport default autosize;\n","import {Storage} from './storage';\nimport {generateId} from './util';\n\n/**\n * Model for the application. It contains the source of truth for the following:\n * - tasks.\n * - tasksDone.\n * - sortBy.\n *\n * The model uses Storage to:\n * - Save its state to persistence when any of the data changes.\n * - It also attempts to load its state from persistence when it is constructed.\n */\nclass AppData {\n  constructor() {\n    /** @type{Array<Task>} */\n    this.tasks = [];\n\n    /** @type{string} */\n    this.sortBy = SortByValues.Priority;\n\n    /** @type{Array<Task>} */\n    this.tasksDone = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._showDonePanel = false;\n\n    Storage.load(this);\n  }\n\n  get showDonePanel() {\n    return this._showDonePanel;\n  }\n\n  set showDonePanel(value) {\n    this._showDonePanel = value;\n    Storage.save(this);\n  }\n\n  /**\n   * @param {string} value Expected to have a SortByValues.\n   */\n  saveSortBy(value) {\n    this.sortBy = value;\n    Storage.save(this);\n  }\n\n  /**\n   * @param {string} index Value of the data-index attribute.\n   */\n  markTaskDone(index) {\n    this.tasks[index].done = !this.tasks[index].done;\n    const checkedTask = this.tasks.splice(index, 1);\n    this.tasksDone.unshift(checkedTask[0]);\n    Storage.save(this);\n  }\n\n  /**\n   * @param {Task} task\n   */\n  addTask(task) {\n    this.tasks.push(task);\n    Storage.save(this);\n  }\n\n  /**\n   * @param {Task} task\n   * @return {number} Index of task in tasks array.\n   */\n  getTaskIndex(task) {\n    return appData.tasks.findIndex((element) => element.id === task.id);\n  }\n\n  save() {\n    Storage.save(this);\n  }\n}\n\n/** Enumeration of valid values for sortBy. */\nconst SortByValues = {\n  Priority: 'Priority',\n  Deadline: 'Deadline',\n};\n\nclass Task {\n  /**\n   * @param {string} text\n   * @param {boolean} done\n   * @param {string} priority\n   */\n  constructor(text, done, priority) {\n    /** @type{string} */\n    this.text = text;\n    /** @type{boolean} */\n    this.done = done;\n    /** @type{string} */\n    this.priority = priority;\n    /** @type{string} */\n    this.deadline = undefined;\n    /** @type{string} */\n    this.id = generateId();\n  }\n}\n\nconst appData = new AppData();\n\nexport {appData, Task, SortByValues};\n","import {deleteElementBySelector} from './util';\nimport {\n  generateListOfTasksDone,\n  generateListOfTasks,\n  createEmptyStatePlanner,\n  ifNoTasksAddEmptyStateToPlanner,\n} from './paint_ui';\nimport {appData} from './app_data';\nimport {\n  sortTasksBy,\n  highlightTask,\n  highlightTaskDone,\n} from './index';\n\n/**\n * Function to move task to done section once completed\n * @param {MouseEvent} event\n */\nconst markTaskDone = (event) => {\n  const doneEmptyState = document.querySelector('#empty-stage-done');\n  const element = event.target;\n  const index = element.dataset.index;\n  if (!element.matches(`img[data-index=\"${index}\"]`)) return;\n\n  // Remove empty state from done section if present\n  if (doneEmptyState) deleteElementBySelector('#empty-stage-done');\n\n  // Repaint the tasks done UI\n  appData.markTaskDone(index);\n  generateListOfTasksDone(appData.tasksDone);\n  highlightTaskDone();\n  generateListOfTasks(appData.tasks);\n\n  if (appData.tasks.length === 0) {\n    deleteElementBySelector('#tasks-table');\n    createEmptyStatePlanner();\n  }\n};\n\n/**\n * Function records every key pressed inside task textarea and stores the value\n * inside of tasks array object's text key.\n * @param {MouseEvent} event\n */\nconst editTaskText = (event) => {\n  const element = event.target;\n  const text = element.value;\n  const index = element.dataset.index;\n  if (!element.matches('.text-cell')) return;\n\n  appData.tasks[index].text = text;\n  appData.save();\n};\n\n/**\n * When the user changes the value of the priority drop down for a given\n * task this function is called.\n * @param {MouseEvent} event\n */\nconst changeTaskPriority = (event) => {\n  const element = event.target;\n  const index = element.dataset.index;\n  if (!element.matches(`.priority[data-index=\"${index}\"`)) return;\n  appData.tasks[index].priority = element.value;\n\n  let taskToRearrange;\n  const deadlineArrowIcon = document.querySelector('#deadline i');\n  const sortedByPriority = !deadlineArrowIcon.classList.contains('visible');\n  const sortedByDeadline = deadlineArrowIcon.classList.contains('visible');\n\n  const handleSortedByPriority = () => {\n    const taskChanged = appData.tasks[index];\n    const priorityOfTheTaskChanged = appData.tasks[index].priority;\n    const firstTaskWithSamePriority = appData.tasks.find((task) =>\n      task.priority === priorityOfTheTaskChanged &&\n        task.id !== taskChanged.id);\n\n    if (firstTaskWithSamePriority !== undefined) {\n      taskToRearrange = appData.tasks.splice(index, 1);\n      const indexOfDuplicate = appData.tasks.indexOf(firstTaskWithSamePriority);\n      appData.tasks.splice(indexOfDuplicate, 0, taskToRearrange[0]);\n      sortTasksBy('Priority');\n      highlightTask(taskToRearrange[0]);\n    } else {\n      sortTasksBy('Priority');\n      highlightTask(taskChanged);\n    }\n  };\n  if (sortedByPriority) handleSortedByPriority();\n  if (sortedByDeadline) appData.save();\n};\n\nconst addDeadlineToTask = (event) => {\n  const element = event.target;\n  const index = element.dataset.index;\n  if (!element.matches('.deadline-cell input[type=\"date\"]')) return;\n  appData.tasks[index].deadline = element.value;\n\n  let taskToRearrange;\n  const deadlineArrowIcon = document.querySelector('#deadline i');\n  const sortedByDeadline = deadlineArrowIcon.classList.contains('visible');\n  const sortedByPriority = !deadlineArrowIcon.classList.contains('visible');\n\n  const handleSortedByDeadline = () => {\n    const taskChanged = appData.tasks[index];\n    const deadlineOfTheTaskChanged = appData.tasks[index].deadline;\n    const firstTaskWithSameDeadline = appData.tasks.find((task) =>\n      task.deadline === deadlineOfTheTaskChanged &&\n        task.id !== taskChanged.id);\n\n    if (firstTaskWithSameDeadline !== undefined) {\n      taskToRearrange = appData.tasks.splice(index, 1);\n      const indexOfDuplicate = appData.tasks.indexOf(firstTaskWithSameDeadline);\n      appData.tasks.splice(indexOfDuplicate, 0, taskToRearrange[0]);\n      sortTasksBy('Deadline');\n      highlightTask(taskToRearrange[0]);\n    } else {\n      sortTasksBy('Deadline');\n      highlightTask(taskChanged);\n    }\n  };\n\n  if (sortedByDeadline) handleSortedByDeadline();\n  if (sortedByPriority) appData.save();\n};\n\n// Function to delete a task.\nconst deleteTask = (event) => {\n  const element = event.target;\n  const index = element.dataset.index;\n  if (!element.matches('.icon-cell i.material-icons')) return;\n\n  appData.tasks.splice(`${index}`, 1);\n  appData.save();\n  generateListOfTasks(appData.tasks);\n  ifNoTasksAddEmptyStateToPlanner();\n};\n\nconst deleteTaskIfTaskTextRemoved = (event) => {\n  const element = event.target;\n  const text = element.value;\n  const index = element.dataset.index;\n  if (!element.matches('.text-cell')) return;\n\n  if (text.trim() === '') {\n    appData.tasks.splice(index, 1);\n    appData.save();\n    generateListOfTasks(appData.tasks);\n    ifNoTasksAddEmptyStateToPlanner();\n  }\n  document.querySelector('#add-task').focus();\n};\n\n\nexport {\n  markTaskDone,\n  editTaskText,\n  changeTaskPriority,\n  addDeadlineToTask,\n  deleteTask,\n  deleteTaskIfTaskTextRemoved,\n};\n","// import autosize from 'autosize';\nimport {deleteElementBySelector} from './util';\n// import autosize from 'autosize/src/autosize';\nimport {appData, SortByValues, Task} from './app_data';\nimport {\n  markTaskDone,\n  editTaskText,\n  changeTaskPriority,\n  addDeadlineToTask,\n  deleteTask,\n  deleteTaskIfTaskTextRemoved,\n} from './edit_task';\nimport {\n  generateTableWithHeader,\n  generateListOfTasksDone,\n  generateListOfTasks,\n  createEmptyStateDone,\n  createEmptyStatePlanner,\n  initializeDoneUI,\n  initializePlannerUI,\n  handleWindowResize,\n  generatePageLayout,\n  ifNoCompletedTasksAddEmptyStateToDone,\n  showDoneTasks,\n  showTasks,\n} from './paint_ui';\n\n// Globals.\n\nconst formElement = document.querySelector('#form');\nconst tasksContainer = document.querySelector('#tasks-container');\nconst doneTasksContainer = document.querySelector('#done-tasks-container');\nconst checkboxButton = document.querySelector('#checkbox-button');\nconst backToPlannerButton = document.querySelector('#back-to-planner');\n\nconst main = () => {\n  generateTodaysDateAndTime();\n  createEmptyStatePlanner();\n  createEmptyStateDone();\n  initializePlannerUI();\n  initializeDoneUI();\n  handleWindowResize();\n\n  window.addEventListener('load', generatePageLayout);\n  formElement.addEventListener('submit', addTask);\n  checkboxButton.addEventListener('click', showDoneTasks);\n  backToPlannerButton.addEventListener('click', showTasks);\n\n  tasksContainer.addEventListener('click', markTaskDone);\n  tasksContainer.addEventListener('keyup', editTaskText);\n  tasksContainer.addEventListener('change', changeTaskPriority);\n  tasksContainer.addEventListener('change', addDeadlineToTask);\n  tasksContainer.addEventListener('click', deleteTask);\n  tasksContainer.addEventListener('focusout', deleteTaskIfTaskTextRemoved);\n\n  doneTasksContainer.addEventListener('click', markTaskUndone);\n  doneTasksContainer.addEventListener('keyup', editTextInDoneTask);\n  doneTasksContainer.addEventListener('focusout',\n      deleteDoneTaskIfTaskTextRemoved\n  );\n\n  window.addEventListener('load', sortTasksOnPageLoad);\n  tasksContainer.addEventListener('click', sortTasksOnClick);\n  tasksContainer.addEventListener('change', sortTasksOnChange);\n};\n\n// Sorting tasks.\n\nconst sortTasksOnChange = (event) => {\n  const element = event.target;\n  if (!element.matches('#sort-by')) return;\n  const selected = document.querySelector('#sort-by').value;\n\n  selected === 'Priority' ?\n      sortTasksBy(SortByValues.Priority) : sortTasksBy(SortByValues.Deadline);\n};\n\n/**\n * Function to sort the tasks by priority or deadline.\n */\nconst sortTasks = () => {\n  const deadlineArrowIcon = document.querySelector('#deadline i');\n  const sortedByDeadline = deadlineArrowIcon.classList.contains('visible');\n  sortedByDeadline ?\n      sortTasksBy(SortByValues.Deadline) : sortTasksBy(SortByValues.Priority);\n};\n\n/**\n * @param {string} value Can be Deadline or Priority.\n */\nconst sortTasksBy = (value) => {\n  const sortByDeadline = () => {\n    // Separating tasks without deadline\n    const noDeadlineTasks = [];\n    const deadlineTasks = [];\n    appData.tasks.forEach((task) => {\n      if (!task.deadline || task.deadline === '') {\n        noDeadlineTasks.push(task);\n      } else {\n        deadlineTasks.push(task);\n      }\n    });\n\n    // Sorting array by deadline.\n    deadlineTasks.sort((a, b) => {\n      if (a.deadline < b.deadline) return -1;\n      if (a.deadline > b.deadline) return 1;\n      return 0;\n    });\n\n    appData.tasks = [...deadlineTasks, ...noDeadlineTasks];\n\n    appData.saveSortBy(value);\n    generateTableWithHeader();\n    generateListOfTasks(appData.tasks);\n  };\n\n  const sortByPriority = () => {\n    // Sort the array by priority.\n    appData.tasks.sort((a, b) => {\n      if (a.priority < b.priority) return -1;\n      if (a.priority > b.priority) return 1;\n      return 0;\n    });\n\n    appData.saveSortBy(value);\n    generateTableWithHeader();\n    generateListOfTasks(appData.tasks);\n  };\n\n  value === SortByValues.Deadline ? sortByDeadline() : sortByPriority();\n};\n\nconst sortTasksOnPageLoad = () => {\n  if (appData.tasks.length === 0) return;\n  sortTasks();\n};\n\nconst sortTasksOnClick = (event) => {\n  const element = event.target;\n  let elementValue;\n\n  if (!element.matches('#priority') &&\n      !element.matches('#deadline') &&\n      !element.matches('i.arrow-down')) return;\n\n  const priorityArrowIcon = document.querySelector('#priority i');\n  const deadlineArrowIcon = document.querySelector('#deadline i');\n\n  if (element.textContent.includes('Priority') ||\n      element.matches('#priority i.arrow-down')) {\n    elementValue = 'Priority';\n\n    // Add arrow to priority.\n    priorityArrowIcon.classList.add('visible');\n    priorityArrowIcon.classList.remove('hidden');\n    // If arrow exists in deadline, remove arrow.\n    deadlineArrowIcon.classList.remove('visible');\n    deadlineArrowIcon.classList.add('hidden');\n  } else if (element.textContent.includes('Deadline') ||\n      element.matches('#deadline i.arrow-down')) {\n    elementValue = 'Deadline';\n    // Add arrow to deadline.\n    deadlineArrowIcon.classList.add('visible');\n    deadlineArrowIcon.classList.remove('hidden');\n    // If arrow exists in priority, remove arrow.\n    priorityArrowIcon.classList.remove('visible');\n    priorityArrowIcon.classList.add('hidden');\n  }\n  sortTasksBy(elementValue);\n};\n\n// Add task.\n\n/**\n * Create a task table given an event. The event is generated on form submit.\n * @param {Event} event\n */\nconst addTask = (event) => {\n  event.preventDefault();\n  // If no tasks present, set the default sorting to priority.\n  const tasksTable = document.querySelector('#tasks-table');\n  if (!tasksTable) {\n    appData.saveSortBy(SortByValues.Priority);\n    generateTableWithHeader();\n    // Add arrow to priority and remove arrow from deadline.\n    const priorityArrowIcon = document.querySelector('#priority i');\n    const deadlineArrowIcon = document.querySelector('#deadline i');\n    priorityArrowIcon.classList.add('visible');\n    priorityArrowIcon.classList.remove('hidden');\n    deadlineArrowIcon.classList.remove('visible');\n    deadlineArrowIcon.classList.add('hidden');\n  }\n\n  const text = document.querySelector('#add-task').value;\n  // If text field is empty, stop executing the rest of the function.\n  if (checkIfTaskIsEmpty(text)) return;\n\n  const task = new Task(text, false, 'P2');\n  appData.addTask(task);\n  formElement.reset();\n  generateListOfTasks(appData.tasks);\n  highlightTask(task);\n};\n\nconst highlightTask = (task) => {\n  const index = appData.getTaskIndex(task);\n\n  // Paint the backgrounds of the elements inside the taskContainer same\n  // color as taskContainer.\n  const gray = '#dddddd';\n  const white = 'RGB(255, 255, 255)';\n  const timeItTakesToAddHighlight = '.3s';\n  const timeItTakesToRemoveHighlight = '1.5s';\n\n  const textBox =\n      document.querySelector(`.text-cell[data-index=\"${index}\"]`);\n  textBox.style.backgroundColor = gray;\n  textBox.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n  const prioritySelector =\n      document.querySelector(`.priority[data-index=\"${index}\"]`);\n  prioritySelector.style.backgroundColor = gray;\n  prioritySelector.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n  const deadlineSelector =\n      document.querySelector(`.deadline[data-index=\"${index}\"]`);\n  deadlineSelector.style.backgroundColor = gray;\n  deadlineSelector.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n  // Select task to paint background image\n  const taskContainer =\n      document.querySelector(`.task[data-index=\"${index}\"]`);\n  taskContainer.style.backgroundColor = gray;\n  taskContainer.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n\n  // Remove the highlight.\n  setTimeout(() => {\n    textBox.style.backgroundColor = white;\n    textBox.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n    prioritySelector.style.backgroundColor = white;\n    prioritySelector.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n    deadlineSelector.style.backgroundColor = white;\n    deadlineSelector.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n    taskContainer.style.backgroundColor = white;\n    taskContainer.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n  }, 300);\n};\n\nconst highlightTaskDone = () => {\n  const index = appData\n      .tasksDone.indexOf(appData.tasksDone[0]);\n\n  // Highlight the task done.\n  const gray = 'RGB(151, 191, 56)';\n  const white = 'RGB(185, 216, 112)';\n  const timeItTakesToAddHighlight = '.3s';\n  const timeItTakesToRemoveHighlight = '1.5s';\n\n  const textBox =\n      document.querySelector(`.done-text-cell[data-index=\"${index}\"]`);\n  textBox.style.backgroundColor = gray;\n  textBox.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n  const taskContainer =\n      document.querySelector(`.task-done[data-index=\"${index}\"]`);\n  taskContainer.style.backgroundColor = gray;\n  taskContainer.style.transition =\n      `background-color ${timeItTakesToAddHighlight}`;\n\n  // Remove the highlight.\n  setTimeout(() => {\n    textBox.style.backgroundColor = white;\n    textBox.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n    taskContainer.style.backgroundColor = white;\n    taskContainer.style.transition =\n        `background-color ${timeItTakesToRemoveHighlight}`;\n  }, 300);\n};\n\n/**\n * Check if task entered is empty.\n * @param {string} taskText\n * @return {boolean} true\n */\nconst checkIfTaskIsEmpty = (taskText) => {\n  if (taskText.trim() === '') {\n    alert('Task is empty');\n    formElement.reset();\n    return true;\n  }\n};\n\n// Edit task done.\n\nconst generateTasksHeader = () => {\n  let deadlineArrowIcon = document.querySelector('#deadline i');\n  // If tasks header doesn't exist, generate it.\n  if (deadlineArrowIcon === null) {\n    appData.saveSortBy(SortByValues.Priority);\n    generateTableWithHeader();\n    deadlineArrowIcon = document.querySelector('#deadline i');\n  }\n  return deadlineArrowIcon;\n};\n\nconst markTaskUndone = (event) => {\n  const element = event.target;\n  const index = element.dataset.index;\n  if (!element.matches(`img[data-index=\"${index}\"]`)) return;\n  appData.tasksDone[index].done = !appData.tasksDone[index].done;\n\n  const deadlineArrowIcon = generateTasksHeader();\n  let undoneTask;\n  const sortedByDeadline = deadlineArrowIcon.classList.contains('visible');\n\n  const handleSortedByDeadline = () => {\n    const deadline = appData.tasksDone[index].deadline;\n    const firstTaskWithSameDeadline =\n        appData.tasks.find((task) => task.deadline === deadline);\n    if (firstTaskWithSameDeadline === undefined) {\n      undoneTask = appData.tasksDone.splice(index, 1);\n      appData.tasks.push(undoneTask[0]);\n    } else {\n      const indexOfDuplicate =\n          appData.tasks.indexOf(firstTaskWithSameDeadline);\n      undoneTask = appData.tasksDone.splice(index, 1);\n      appData.tasks.splice(indexOfDuplicate, 0, undoneTask[0]);\n    }\n  };\n\n  const handleSortedByPriority = () => {\n    const priority = appData.tasksDone[index].priority;\n    const firstTaskWithSamePriority =\n        appData.tasks.find((task) => task.priority === priority);\n    if (firstTaskWithSamePriority === undefined) {\n      undoneTask = appData.tasksDone.splice(index, 1);\n      appData.tasks.push(undoneTask[0]);\n    } else {\n      const indexOfDuplicate = appData.tasks.indexOf(firstTaskWithSamePriority);\n      undoneTask = appData.tasksDone.splice(index, 1);\n      appData.tasks.splice(indexOfDuplicate, 0, undoneTask[0]);\n    }\n  };\n\n  sortedByDeadline ? handleSortedByDeadline() : handleSortedByPriority();\n  generateListOfTasksDone(appData.tasksDone);\n  sortTasks();\n  highlightTask(undoneTask[0]);\n\n  if (appData.tasksDone.length === 0) {\n    deleteElementBySelector('#tasks-done');\n    createEmptyStateDone();\n  }\n  appData.save();\n};\n\nconst editTextInDoneTask = (event) => {\n  const element = event.target;\n  const text = element.value;\n  const index = element.dataset.index;\n  if (!element.matches('.done-text-cell')) return;\n\n  appData.tasksDone[index].text = text;\n  appData.save();\n};\n\nconst deleteDoneTaskIfTaskTextRemoved = (event) => {\n  const element = event.target;\n  const text = element.value;\n  const index = element.dataset.index;\n  if (!element.matches('.done-text-cell')) return;\n\n  if (text.trim() === '') {\n    appData.tasksDone.splice(index, 1);\n    appData.save();\n    generateListOfTasksDone(appData.tasksDone);\n    ifNoCompletedTasksAddEmptyStateToDone();\n  }\n  document.querySelector('#add-task').focus();\n};\n\n/**\n * Function to add a current date and time on the web app.\n */\nconst generateTodaysDateAndTime = () => {\n  const displayTime = () => {\n    const dateContainer = document.querySelector('#date');\n    const today = new Date();\n\n    const date = today.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n    });\n\n    const time = today.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n\n    const spaces = '\\u00A0\\u00A0|\\u00A0\\u00A0';\n    dateContainer.innerHTML = `Today ${spaces} ${date} ${spaces} ${time}`;\n  };\n  setInterval(displayTime, 1000);\n  displayTime();\n};\n\n// Run on document loaded.\ndocument.addEventListener('DOMContentLoaded', main);\n\nexport {\n  tasksContainer,\n  sortTasksBy,\n  highlightTask,\n  highlightTaskDone,\n  sortTasksOnChange,\n};\n","import {deleteElementBySelector} from './util';\nimport autosize from 'autosize/src/autosize';\nimport {appData, SortByValues} from './app_data';\nimport {tasksContainer} from './index';\n\n/**\n * If some tasks present, return and add a task to the existing table with\n * the next function.\n */\nconst generateTableWithHeader = () => {\n  let tasksTable = document.querySelector('#tasks-table');\n  if (!tasksTable) {\n    // clear the empty state\n    deleteElementBySelector('#empty-stage-planner');\n\n    tasksTable = document.createElement('table');\n    tasksTable.setAttribute('id', 'tasks-table');\n    tasksContainer.appendChild(tasksTable);\n\n    const priorityArrow =\n        appData.sortBy === SortByValues.Priority ? 'visible' : 'hidden';\n    const deadlineArrow =\n        appData.sortBy === SortByValues.Deadline ? 'visible' : 'hidden';\n    const prioritySelected =\n        appData.sortBy === SortByValues.Priority ? 'selected' : '';\n    const deadlineSelected =\n        appData.sortBy === SortByValues.Deadline ? 'selected' : '';\n    tasksTable.innerHTML = `\n      <thead>\n      <tr id=\"task-headings\">\n          <th></th>\n          <th id=\"task\" class=\"heading-cell\">Task</th>\n          <th id=\"priority\" class=\"heading-cell\">\n            Priority<i class=\"material-icons arrow-down ${priorityArrow}\"\n              >keyboard_arrow_down</i>\n          </th>\n          <th id=\"deadline\" class=\"heading-cell\">\n            Deadline<i class=\"material-icons arrow-down ${deadlineArrow}\"\n            >keyboard_arrow_down</i>\n          </th>\n          <th class=\"sorting-cell\">\n             <select id=\"sort-by\">\n                <option value=\"Priority\" ${prioritySelected}>Priority</option>\n                <option value=\"Deadline\" ${deadlineSelected}>Deadline</option>\n             </select>\n          </th>\n      </tr>\n      </thead>\n      `;\n  }\n};\n\n// Function to generate list of tasks that are done\nconst generateListOfTasksDone = (tasksDoneArray = []) => {\n  const tasksDoneContainer = document.querySelector('#done-tasks-container');\n  deleteElementBySelector('#tasks-done');\n\n  const table = document.createElement('table');\n  table.setAttribute('id', 'tasks-done');\n  tasksDoneContainer.appendChild(table);\n\n  const renderDoneTask = (task, index) => {\n    return `\n      <tr class=\"task-done\" data-index=\"${index}\">\n        <td class=\"chkbx-cell-done\">\n          <img\n             class=\"chkbx-img-checked\"\n             src=\"images/checkbox-checked.svg\"\n             data-index=\"${index}\">\n        </td>\n        <td>\n          <textarea class=\"done-text-cell\" rows=\"1\" data-index=\"${index}\"\n          >${task.text}</textarea>\n        </td>\n      </tr>\n    `;\n  };\n\n  const tasksDoneTable = document.querySelector('#tasks-done');\n  // Push the new task in front of tasks that exist.\n  tasksDoneTable.innerHTML = tasksDoneArray.map(renderDoneTask).join('');\n  autosize(tasksDoneTable.querySelectorAll('textarea'));\n};\n\n/**\n * @param {Array<Object>} tasksArray this is painted to the screen.\n */\nconst generateListOfTasks = (tasksArray = []) => {\n  const tasksTable = document.querySelector('#tasks-table');\n\n  deleteElementBySelector('#tasks-table > tbody');\n\n  // Make a table body container to store all tasks.\n  const tableBody = document.createElement('tbody');\n  tasksTable.appendChild(tableBody);\n\n  // Map over each array element and paint them on screen.\n  const renderTask = (task, index) => {\n    const deadlineAttributeHTML = task.deadline ?\n        `value=\"${task.deadline}\"` : '';\n    const p0Selected = task.priority === 'P0' ? 'selected' : '';\n    const p1Selected = task.priority === 'P1' ? 'selected' : '';\n    const p2Selected = task.priority === 'P2' ? 'selected' : '';\n\n    return `\n      <tr class=\"task\" data-index=\"${index}\">\n        <td class=\"chkbx-cell\">\n          <img\n            class=\"chkbx-img-unchecked\"\n            src=\"images/checkbox-unchecked.svg\"\n            data-index=\"${index}\">\n        </td>\n        <td class=\"textarea-cell\">\n          <textarea \n            rows=\"1\" \n            class=\"text-cell\" \n            data-index=\"${index}\">${task.text}</textarea>\n        </td>\n        <td class=\"priority-cell\">\n          <select class=\"priority\" data-index=\"${index}\">\n            <option value=\"P0\" ${p0Selected}>P0</option>\n            <option value=\"P1\" ${p1Selected}>P1</option>\n            <option value=\"P2\" ${p2Selected}>P2</option>\n          </select>\n        </td>\n        <td class=\"deadline-cell\">\n          <input\n            type=\"date\"\n            class=\"deadline\"\n            ${deadlineAttributeHTML}\n            data-index=\"${index}\">\n        </td>\n        <td class=\"icon-cell\">\n          <i class=\"material-icons\" data-index=\"${index}\">delete</i>\n        </td>\n      </tr>\n       `;\n  };\n\n  tableBody.innerHTML = tasksArray.map(renderTask).join('');\n  autosize(tableBody.querySelectorAll('textarea'));\n};\n\n/**\n * If no tasks created, then paint the empty state into on planner page.\n */\nconst createEmptyStatePlanner = () => {\n  if (appData.tasks.length > 0) return;\n  const tasksTable = document.querySelector('#tasks-table');\n  if (!tasksTable) {\n    addEmptyStateToPlanner();\n    appData.saveSortBy(SortByValues.Priority);\n  }\n};\n\n/**\n * If no tasks completed, then paint the empty state into on done page.\n */\nconst createEmptyStateDone = () => {\n  if (appData.tasksDone.length > 0) return;\n  const tasksDoneTable = document.querySelector('#tasks-done');\n  if (!tasksDoneTable) addEmptyStateToDone();\n};\n\n// Function to add empty state paragraph to Done section\nconst addEmptyStateToDone = () => {\n  const container = document.querySelector('#done-tasks-container');\n  const div = document.createElement('div');\n  div.setAttribute('id', 'empty-stage-done');\n  div.setAttribute('class', 'empty-stage top-padding');\n  container.appendChild(div);\n\n  div.innerHTML =\n      '<img class=\"checkbox\" src=\"images/checkbox_icon.svg\">' +\n      '<p class=\"empty-stage-text\">' +\n      'Tasks you get done<br>will appear here.</p>';\n};\n\n/**\n * Function to add empty state paragraph to Planner section.\n */\nconst addEmptyStateToPlanner = () => {\n  const container = document.querySelector('#tasks-container');\n  const div = document.createElement('div');\n  container.appendChild(div);\n  div.setAttribute('id', 'empty-stage-planner');\n  div.setAttribute('class', 'empty-stage');\n\n  div.innerHTML =\n      '<img class=\"sun\" src=\"images/sun.svg\">' +\n      '<p class=\"empty-stage-text gray\">' +\n      'You have no tasks.<br>Add a task below.</p>';\n};\n\nconst ifNoTasksAddEmptyStateToPlanner = () => {\n  if (appData.tasks.length === 0) {\n    deleteElementBySelector('#tasks-table');\n    createEmptyStatePlanner();\n    document.querySelector('#add-task').focus();\n  }\n};\n\nconst ifNoCompletedTasksAddEmptyStateToDone = () => {\n  if (appData.tasksDone.length === 0) {\n    deleteElementBySelector('#tasks-done');\n    createEmptyStateDone();\n    document.querySelector('#add-task').focus();\n  }\n};\n\n/**\n * If item(s) in tasks, then generate table with the task(s).\n */\nconst initializePlannerUI = () => {\n  if (appData.tasks.length === 0) return;\n  generateTableWithHeader();\n  generateListOfTasks(appData.tasks);\n};\n\nconst initializeDoneUI = () => {\n  if (appData.tasksDone.length === 0) return;\n  generateListOfTasksDone(appData.tasksDone);\n};\n\n// Responsive design.\n\nconst handleWindowResize = () => {\n  let resizeTaskId = null;\n\n  /* https://css-tricks.com/the-trick-to-viewport-units-on-mobile/ */\n  const setViewportHeight = ()=>{\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  };\n\n  const generateAppLayoutAfterResizingWindow = () => {\n    if (resizeTaskId !== null) clearTimeout(resizeTaskId);\n\n    resizeTaskId = setTimeout(() => {\n      resizeTaskId = null;\n      generatePageLayout();\n    }, 10);\n  };\n\n  window.addEventListener('resize', () => {\n    setViewportHeight();\n    generateAppLayoutAfterResizingWindow();\n  });\n\n  setViewportHeight();\n};\n\nconst showTasks = () => {\n  appData.showDonePanel = false;\n  const doneContainer = document.querySelector('#done-container');\n  doneContainer.style.display = 'none';\n  const mainContent = document.querySelector('#main-content');\n  mainContent.style.display = 'flex';\n  mainContent.style.width = '100%';\n  mainContent.style.minWidth = '320px';\n};\n\nconst showDoneTasks = () => {\n  appData.showDonePanel = true;\n  const mainContent = document.querySelector('#main-content');\n  mainContent.style.display = 'none';\n  const doneContainer = document.querySelector('#done-container');\n  doneContainer.style.display = 'flex';\n  doneContainer.style.width = '100%';\n  doneContainer.style.minWidth = '320px';\n};\n\nconst generatePageLayout = () => {\n  const mainContent = document.querySelector('#main-content');\n  const doneContainer = document.querySelector('#done-container');\n\n  if (window.matchMedia('(min-width: 801px)').matches) {\n    mainContent.style.display = 'flex';\n    mainContent.style.width = '870px';\n    doneContainer.style.display = 'flex';\n    doneContainer.style.width = '530px';\n  }\n\n  if (window.matchMedia('(max-width: 800px)').matches) {\n    if (appData.showDonePanel) {\n      showDoneTasks();\n    } else {\n      showTasks();\n    }\n  }\n\n  if (window.matchMedia('(min-width: 361px)').matches) {\n    const tableHeader = document.querySelector('#tasks-table');\n    if (!tableHeader) return;\n\n    const priorityArrow =\n        appData.sortBy === SortByValues.Priority ? 'visible' : 'hidden';\n    const deadlineArrow =\n        appData.sortBy === SortByValues.Deadline ? 'visible' : 'hidden';\n    const prioritySelected =\n        appData.sortBy === SortByValues.Priority ? 'selected' : '';\n    const deadlineSelected =\n        appData.sortBy === SortByValues.Deadline ? 'selected' : '';\n\n    tableHeader.innerHTML = `\n      <thead>\n      <tr id=\"task-headings\">\n          <th></th>\n          <th id=\"task\" class=\"heading-cell\">Task</th>\n          <th id=\"priority\" class=\"heading-cell\">\n            Priority<i class=\"material-icons arrow-down ${priorityArrow}\"\n              >keyboard_arrow_down</i>\n          </th>\n          <th id=\"deadline\" class=\"heading-cell\">\n            Deadline<i class=\"material-icons arrow-down ${deadlineArrow}\"\n            >keyboard_arrow_down</i>\n          </th>\n          <th class=\"sorting-cell\">\n             <select id=\"sort-by\">\n                <option value=\"Priority\" ${prioritySelected}>Priority</option>\n                <option value=\"Deadline\" ${deadlineSelected}>Deadline</option>\n             </select>\n          </th>\n      </tr>\n      </thead>\n      `;\n    generateListOfTasks(appData.tasks);\n  }\n\n  if (window.matchMedia('(max-width: 360px)').matches) {\n    const dropdown = document.querySelector('#sort-by');\n    const prioritySelected =\n        appData.sortBy === SortByValues.Priority ? 'selected' : '';\n    const deadlineSelected =\n        appData.sortBy === SortByValues.Deadline ? 'selected' : '';\n    dropdown.innerHTML = `\n                <option value=\"Priority\" ${prioritySelected}>Priority</option>\n                <option value=\"Deadline\" ${deadlineSelected}>Deadline</option>\n             `;\n  }\n};\n\n\nexport {\n  generateTableWithHeader,\n  generateListOfTasksDone,\n  generateListOfTasks,\n  createEmptyStatePlanner,\n  createEmptyStateDone,\n  ifNoTasksAddEmptyStateToPlanner,\n  ifNoCompletedTasksAddEmptyStateToDone,\n  initializePlannerUI,\n  initializeDoneUI,\n  handleWindowResize,\n  generatePageLayout,\n  showDoneTasks,\n  showTasks,\n};\n","// import {appData} from './app_data';\n\nconst Key = 'appData';\n\nclass Storage {\n  /**\n   * If data is available in local storage, then copy it into appData.\n   * @param {AppData} appData\n   */\n  static load(appData) {\n    const dataFromStorage = JSON.parse(localStorage.getItem(Key));\n    if (!dataFromStorage) return;\n    Object.assign(appData, dataFromStorage);\n  }\n\n  /**\n   * @param {AppData} appData\n   */\n  static save(appData) {\n    localStorage.setItem(Key, JSON.stringify(appData));\n  }\n}\n\nexport {Storage};\n","const deleteElementBySelector = (selector) => {\n  if (!selector) return;\n  const divToRemove = document.querySelector(selector);\n  if (!divToRemove) return;\n  divToRemove.parentNode.removeChild(divToRemove);\n};\n\nconst generateId = () =>{\n  const date = new Date().getTime().toString();\n  const randomNumber = (Math.random() * 1000).toString();\n  return date + randomNumber;\n};\n\nexport {deleteElementBySelector, generateId};\n"],"sourceRoot":""}